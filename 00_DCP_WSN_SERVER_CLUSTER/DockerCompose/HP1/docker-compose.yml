version: '3.7'
#docker network create --driver bridge --subnet=200.200.0.0/16 --ip-range=200.200.200.0/24 --gateway=200.200.0.1 wsn_net

networks:
  wsn_net:
    ipam:
      config:
        - subnet: 200.200.200.0/24  # Subnet của mạng
          ip_range: 200.200.200.0/24  # Phạm vi IP cho mạng
          gateway: 200.200.200.1  # Gateway của mạng

services:
  #####################################################
  ############# A. ZABBIX CLUSTER #####################
  #####################################################
  #2. Start empty MySQL server instance
  wsnCluster_zabbix-mysql-server:
    container_name: wsnCluster_zabbix-mysql-server
    user: root
    environment:
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix_pwd      #Nếu load dữ liệu từ file backup thì password này phải giống với password của user zabbix trong file backup
      - MYSQL_ROOT_PASSWORD=root_pwd   #Nếu load dữ liệu từ file backup thì password này phải giống với password của user zabbix trong file backup
      - TZ=Asia/Saigon                 #Set time zone cho MySQL server
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE/vscode_extensions_container:/root/.vscode-server/extensions
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/2_MySQL:/AppDir
      - /root/0_GIT_WSN_SERVER_CLUSTER/2_MySQL/0_MySQL_DATA_BKUP:/mySqlBackupDir            #MySQL data backup
      - /root/0_GIT_WSN_SERVER_CLUSTER/2_MySQL/mysqlBackupScript.sh:/mysqlBackupScript.sh   #MySQL data backup script
      - /root/0_GIT_WSN_SERVER_CLUSTER/2_MySQL/data:/var/lib/mysql                          #MySQL data
    ports:
      - 10000:3306
    networks:
      wsn_net:
        ipv4_address: '200.200.200.2'
    restart: unless-stopped
    image: 'mysql:8.0'
    command: /bin/bash -l -c "sh /mysqlBackupScript.sh & docker-entrypoint.sh --character-set-server=utf8 --collation-server=utf8_bin --default-authentication-plugin=mysql_native_password"

  #3. Start Zabbix Java gateway instance
  wsnCluster_zabbix-java-gateway:
    container_name: wsnCluster_zabbix-java-gateway
    user: root
    networks: 
      wsn_net:
        ipv4_address: '200.200.200.3'
    restart: unless-stopped
    image: 'zabbix/zabbix-java-gateway:alpine-6.2-latest'
      
  #4. Start Zabbix server instance and link the instance with created MySQL server instance
  wsnCluster_zabbix-server-agent:
    container_name: wsnCluster_zabbix-server-agent
    user: root
    environment:
      - DB_SERVER_HOST=wsnCluster_zabbix-mysql-server
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix_pwd
      - MYSQL_ROOT_PASSWORD=root_pwd 
      - ZBX_JAVAGATEWAY=wsnCluster_zabbix-java-gateway
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/4_Zabbix_Server:/AppDir
      - /root/0_GIT_WSN_SERVER_CLUSTER/4_Zabbix_Server:/var/lib/zabbix/shareFolder
      - /root/0_GIT_WSN_SERVER_CLUSTER/4_Zabbix_Server/alertScripts:/usr/lib/zabbix/alertscripts
    networks:
      wsn_net:
        ipv4_address: '200.200.200.4'
    ports:
      - '10001:10051' #Agent port of Zabbix server
    depends_on:
      - wsnCluster_zabbix-mysql-server
    working_dir: /AppDir
    restart: unless-stopped
    image: 'zabbix/zabbix-server-mysql:alpine-6.2-latest'
    command: /bin/sh -c "apk add mosquitto-clients &&
                         apk add tzdata && cp /usr/share/zoneinfo/Asia/Saigon /etc/localtime && 
                         /sbin/tini -- /usr/bin/docker-entrypoint.sh /usr/sbin/zabbix_server --foreground -c /etc/zabbix/zabbix_server.conf"

  #5. Start Zabbix web interface instance and link the instance with created MySQL server instance
  wsnCluster_zabbix-web-nginx-mysql:
    container_name: wsnCluster_zabbix-web-nginx-mysql
    user: root
    environment:
      - ZBX_SERVER_HOST=wsnCluster_zabbix-server-agent
      - DB_SERVER_HOST=wsnCluster_zabbix-mysql-server
      - MYSQL_DATABASE=zabbix
      - MYSQL_USER=zabbix
      - MYSQL_PASSWORD=zabbix_pwd
      - MYSQL_ROOT_PASSWORD=root_pwd
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE/vscode_extensions_container:/root/.vscode-server/extensions
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/5_Zabbix_Web:/AppDir
    networks: 
      wsn_net:
        ipv4_address: '200.200.200.5'
    ports:
      - '10002:8080'
    depends_on:
      - wsnCluster_zabbix-mysql-server
    working_dir: /AppDir
    restart: unless-stopped
    image: 'zabbix/zabbix-web-nginx-mysql:alpine-6.2-latest'

  #####################################################
  ############# B. OTHER CONTAINERS #####################
  #####################################################
  #6. MQTT broker
  #USER: mqtt_broker
  #PASS: !Da#ImU%VuF3V
  wsnCluster_mqtt: #Alpine Linux
    image: meomay22/eclipse-mosquitto-pwfile:1.2
    container_name: wsnCluster_mqtt
    user: root
    restart: always
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE/vscode_extensions_container:/root/.vscode-server/extensions
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/6_MQTT_Broker:/AppDir
    ports:
      # - 1883:1883 #Tag V1.0
      - 10003:1885 #Tag V1.1
      - 10004:9001 #MQTT over Websocket
    working_dir: /AppDir
    networks:
      wsn_net: #external network
        ipv4_address: '200.200.200.6'

  #7. Socket.io
  wsnCluster_socketio: #Alpine Linux
    # build: ./socketio/
    image: meomay22/socketio_alpine:1.0
    container_name: wsnCluster_socketio
    user: root
    restart: 'always'
    networks:
      wsn_net: #external network
        ipv4_address: '200.200.200.7'
    ports:
      - 10005:5000
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE/vscode_extensions_container:/root/.vscode-server/extensions
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/7_SocketIO_Server:/AppDir
    working_dir: /AppDir
    # command: "python3 /AppDir/Application/socketIo_AsyncServer.py"
    command: /bin/sh -c "apk add tzdata && cp /usr/share/zoneinfo/Asia/Saigon /etc/localtime &&
                         screen -dmS SocketIoSever    python3 /AppDir/Application/socketIo_AsyncServer.py && sleep 5 &&
                         screen -dmS SocketIoMqttSide python3 /AppDir/Application/socketIo_MqttSideExec.py &&
                         tail -f /dev/null" #Sleep 5 giây đợi SocketIO Server và Web server khởi động xong.



  #8. wsnCluster_PyWorker
  ##### THIẾU ######
  # + pip install py-zabbix

  wsnCluster_PyWorker: #Alpine Linux
    # build: ./socketio/
    image: meomay22/socketio_alpine:1.0
    container_name: wsnCluster_PyWorker
    user: root
    restart: 'always'
    networks:
      wsn_net: #external network
        ipv4_address: '200.200.200.8'
    volumes:
      - /root/myConfig:/myConfig
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE/vscode_extensions_container:/root/.vscode-server/extensions
      - /root/0_GIT_WSN_SERVER_CLUSTER/0_SHARE:/0_SHARE
      - /root/0_GIT_WSN_SERVER_CLUSTER/8_PyWorker:/AppDir
      - /root/0_GIT_WSN_SERVER_CLUSTER:/0_GIT_WSN_SERVER_CLUSTER
      - /root/0_GIT_WSN_SERVER_CLUSTER/8_PyWorker/sshKey:/root/.ssh
    working_dir: /AppDir
    # depends_on:
    #   - wsnCluster_zabbix-server-agent
    #   - wsnCluster_mqtt
    #   - wsnCluster_socketio
    command: /bin/sh -c "apk add tzdata && cp /usr/share/zoneinfo/Asia/Saigon /etc/localtime &&
                         pip install sib_api_v3_sdk &&
                         pip install rsa &&
                         pip install mysql-connector-python==8.0.29 &&
                         sleep 5 &&
                         screen -dmS scanProblem python3 /AppDir/Application/scanZabbixProblem.py &&
                         screen -dmS sendMail python3 /AppDir/Application/sendMail.py &&
                         tail -f /dev/null" #Sleep 5 giây đợi SocketIO Server và Web server khởi động xong.
    # command: "python3 /AppDir/Application/scanZabbixProblem.py"
    # command: /bin/sh -c "pip install py-zabbix &&
    #                      screen -dmS SCAN_PROBLEM python3 /AppDir/Application/scanZabbixProblem.py && 
    #                      tail -f /dev/null"
    # command: /bin/sh -c "pip install py-zabbix && python3 /AppDir/Application/scanZabbixProblem.py"

  #9. phpMyAdmin
  wsnCluster_zabbix_phpmyadmin:
    image: phpmyadmin
    container_name: wsnCluster_zabbix_phpmyadmin
    user: root
    restart: always
    ports:
      - 10006:80 #http://192.168.60.168:81
    depends_on:
      - wsnCluster_zabbix-mysql-server
    links:
      - 'wsnCluster_zabbix-mysql-server:db' #<Tên service>[:tạo alias cho service]. CHÚ Ý: Nếu tên service không sẵn là 'db' thì
                         #alias name của mysql phải là 'db' vì code bên trong phpmyadmin sẽ tìm kiếm DB server theo tên này.
    networks:
      wsn_net:
        ipv4_address: '200.200.200.9'